version: '3.7'

services:

  # nginx:
  #   container_name: nginx
  #   image: nginx:alpine
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes: 
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./certs:/etc/nginx/certs
  #     - ./secrets/global.pass:/etc/keys/global.pass
  #   depends_on: 
  #     - backend
  #   networks:
  #     - webnet

  # backend:
  #   container_name: backend
  #   build:
  #     context: ./finances
  #     dockerfile: ./docker/Dockerfile
  #   command: yarn start:dev
  #   ports:
  #     - 3000:3000
  #   volumes: 
  #     - ./finances:/opt/app
  #     - /opt/app/node_modules
  #   networks:
  #     - webnet
  #     - db

  auth_backend:
    container_name: auth_backend
    build:
      context: ./auth-server
      dockerfile: ./docker/Dockerfile
    command: yarn start:dev
    env_file: $ENV_FILE
    ports:
      - 3001:3000
    volumes: 
      - ./auth-server:/opt/app
      - /opt/app/node_modules
    networks:
      - webnet
      - db

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    env_file: $ENV_FILE
    environment:
      MONGO_INITDB_ROOT_USERNAME: $DB_FINANCE_USER
      MONGO_INITDB_ROOT_PASSWORD: $DB_FINANCE_PASSWORD
      MONGO_INITDB_DATABASE: $DB_FINANCE_NAME
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    ports:
       - 27017:27017
    networks:
      - webnet
      - db
      
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $DB_FINANCE_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $DB_FINANCE_PASSWORD
      ME_CONFIG_MONGODB_SERVER: $DB_HOST
      ME_CONFIG_MONGODB_PORT: $DB_PORT
    depends_on: 
      - mongo
    networks:
      - db

  # caddy:
  #   image: caddy:alpine
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"   
  #   volumes:
  #     - $PWD/caddy/Caddyfile:/etc/caddy/Caddyfile
  #     - $PWD/finances:/srv
  #     - ./caddy/caddy_data:/data
  #     - ./caddy/caddy_config:/config
  #   depends_on:
  #     - backend

volumes: 
  nginx:
  backend:
networks:
  webnet:
  db: